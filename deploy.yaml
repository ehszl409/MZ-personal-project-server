apiVersion: v1
kind: Pod
metadata:
  name: first-app                     # Pod의 이름
  labels:
   app: first-app                     # Pod의 레이블
spec:
  containers:
  - name: first-app                   # 컨테이너 이름
    image: ehszl409/personal-prj-tomcat               # 컨테이너 이미지 (Nginx 서버 최신 버전)
    resources:
      limits:
        memory: "128Mi"               # 메모리 제한
        cpu: "500m"                   # CPU 제한
    ports:
      - containerPort: 8080             # 컨테이너 포트 설정 (80번 포트 사용)
  imagePullSecrets:
  - name: docker-pull-secret          # 이미지를 가져올 때 사용할 시크릿 이름
          
# 세 번째 리소스: first-service Service 생성
---
apiVersion: v1
kind: Service
metadata:
  name: first-service                 # 서비스 이름
spec:
  selector:
    app: first-app                    # first-app 레이블이 붙은 Pod를 선택
  ports:
  - port: 8080                          # 서비스 포트 설정 (80번 포트 사용)
    targetPort: 8080                    # 선택된 Pod의 대상 포트 설정 (80번 포트 사용)

# 다섯 번째 리소스: myingress Ingress 리소스 생성
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myingress                     # Ingress 리소스의 이름
  labels:
    name: myingress                   # Ingress 리소스의 레이블
  annotations:
    # Nginx Ingress가 처리할 때, 요청을 받으면 URI를 다시 쓰기 위한 설정 (경로를 변경할 수 있음)
    nginx.ingress.kubernetes.io/rewrite-target: "/personal-prj-tomcat/"
    # Ingress 리소스를 처리할 Ingress Controller (여기서는 nginx Ingress Controller를 사용)
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: "home.com"               # 호스트 이름 설정 (example.com)
    http:
      paths:
      - pathType: Prefix               # 경로 유형 설정 (접두사)
        path: "/home"                 # "/first"로 시작하는 경로에 대해 처리함
        backend:
          service:
            name: first-service        # 연결할 서비스 이름 (first-service)
            port:
              number: 8080               # 대상 서비스 포트 번호 (80)